{"version":3,"file":"132.js","mappings":"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","sources":["webpack://weoreum-ts/./components/Modal/styles.ts","webpack://weoreum-ts/./components/Modal/index.tsx","webpack://weoreum-ts/./components/inviteChannelModal/index.tsx","webpack://weoreum-ts/./hooks/useSocket.ts","webpack://weoreum-ts/./layouts/Workspace/styles.ts","webpack://weoreum-ts/./components/createChannelModal/index.tsx","webpack://weoreum-ts/./components/inviteWorkspaceModal/index.tsx","webpack://weoreum-ts/./components/DMList/styles.ts","webpack://weoreum-ts/./components/EachChannel/index.tsx","webpack://weoreum-ts/./components/ChannelList/index.tsx","webpack://weoreum-ts/./components/EachDM/index.tsx","webpack://weoreum-ts/./components/DMList/index.tsx","webpack://weoreum-ts/./components/TrelloList/index.tsx","webpack://weoreum-ts/./components/CalendarList/index.tsx","webpack://weoreum-ts/./layouts/Workspace/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const CreateModal = styled.div`\r\n  position: fixed;\r\n  text-align: center;\r\n  left: 0;\r\n  bottom: 0;\r\n  top: 0;\r\n  right: 0;\r\n  z-index: 1022;\r\n  & > div {\r\n    margin-top: 200px;\r\n    display: inline-block;\r\n    width: 440px;\r\n    background: white;\r\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\r\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\r\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\r\n    border-radius: 6px;\r\n    user-select: none;\r\n    max-width: 440px;\r\n    padding: 30px 40px 0;\r\n    z-index: 1012;\r\n    position: relative;\r\n  }\r\n`;\r\n\r\nexport const CloseModalButton = styled.button`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 6px;\r\n  background: transparent;\r\n  border: none;\r\n  font-size: 30px;\r\n  cursor: pointer;\r\n`;\r\n","import { CreateModal, CloseModalButton } from '@components/Modal/styles';\r\nimport React, { FC, PropsWithChildren, useCallback } from 'react';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n}\r\n\r\nconst Modal: FC<PropsWithChildren<Props>> = ({ show, children, onCloseModal }) => {\r\n  const stopPropagation = useCallback((e) => {\r\n    e.stopPropagation();\r\n  }, []);\r\n\r\n  if (!show) {\r\n    return null;\r\n  }\r\n  return (\r\n    <CreateModal onClick={onCloseModal}>\r\n      <div onClick={stopPropagation}>\r\n        <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>\r\n        {children}\r\n      </div>\r\n    </CreateModal>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import Modal from '@components/Modal';\r\nimport useInput from '@hooks/useInput';\r\nimport { Button, Input, Label } from '@pages/SignUp/styles';\r\nimport { IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport React, { FC, useCallback } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n  setShowInviteChannelModal: (flag: boolean) => void;\r\n}\r\nconst InviteChannelModal: FC<Props> = ({ show, onCloseModal, setShowInviteChannelModal }) => {\r\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\r\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\r\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\r\n  const { mutate: mutateMembers } = useSWR<IUser[]>(\r\n    userData ? `/api/workspaces/${workspace}/channels/${channel}/members` : null,\r\n    fetcher,\r\n  );\r\n\r\n  const onInviteMember = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!newMember || !newMember.trim()) {\r\n        return;\r\n      }\r\n      axios\r\n        .post(`/api/workspaces/${workspace}/channels/${channel}/members`, {\r\n          email: newMember,\r\n        })\r\n        .then(() => {\r\n          mutateMembers();\r\n          setShowInviteChannelModal(false);\r\n          setNewMember('');\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response?.data, { position: 'bottom-center' });\r\n        });\r\n    },\r\n    [channel, newMember, mutateMembers, setNewMember, setShowInviteChannelModal, workspace],\r\n  );\r\n\r\n  return (\r\n    <Modal show={show} onCloseModal={onCloseModal}>\r\n      <form onSubmit={onInviteMember}>\r\n        <Label id=\"member-label\">\r\n          <span>채널 멤버 초대</span>\r\n          <Input id=\"member\" value={newMember} onChange={onChangeNewMember} />\r\n        </Label>\r\n        <Button type=\"submit\">초대하기</Button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default InviteChannelModal;\r\n","import io from 'socket.io-client';\r\nimport { useCallback } from 'react';\r\n\r\nconst backUrl = 'http://localhost:3095';\r\n\r\nconst sockets: { [key: string]: SocketIOClient.Socket } = {};\r\n\r\nconst useSocket = (workspace?: string): [SocketIOClient.Socket | undefined, () => void] => {\r\n  const disconnect = useCallback(() => {\r\n    if (workspace) {\r\n      sockets[workspace].disconnect();\r\n      delete sockets[workspace];\r\n    }\r\n  }, [workspace]);\r\n\r\n  if (!workspace) {\r\n    return [undefined, disconnect];\r\n  }\r\n  if (!sockets[workspace]) {\r\n    sockets[workspace] = io(`${backUrl}/ws-${workspace}`, {\r\n      transports: ['websocket'],\r\n    });\r\n    console.info('create socket', workspace, sockets[workspace]);\r\n  }\r\n\r\n  return [sockets[workspace], disconnect];\r\n};\r\n\r\nexport default useSocket;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const RightMenu = styled.div`\r\n  float: right;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  height: 55px;\r\n  background: #fff;\r\n  color: #f5f6fa;\r\n  box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.1);\r\n  padding: 5px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const ProfileImg = styled.img`\r\n  width: 28px;\r\n  height: 28px;\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 16px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const ProfileModal = styled.div`\r\n  display: flex;\r\n  padding: 20px;\r\n  & img {\r\n    display: flex;\r\n  }\r\n  & > div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-left: 10px;\r\n  }\r\n  & #profile-name {\r\n    font-weight: bold;\r\n    display: inline-flex;\r\n  }\r\n  & #profile-active {\r\n    font-size: 13px;\r\n    display: inline-flex;\r\n  }\r\n`;\r\n\r\nexport const LogOutButton = styled.button`\r\n  border: none;\r\n  width: 100%;\r\n  border-top: 1px solid rgb(29, 28, 29);\r\n  background: transparent;\r\n  display: block;\r\n  height: 33px;\r\n  padding: 5px 20px 5px;\r\n  outline: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const WorkspaceWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n`;\r\n\r\nexport const Workspaces = styled.div`\r\n  width: 65px;\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: #273c75;\r\n  border-top: 1px solid rgb(1, 1, 1);\r\n  border-right: 1px solid rgb(1, 1, 1);\r\n  vertical-align: top;\r\n  text-align: center;\r\n  padding: 15px 0 0;\r\n`;\r\n\r\nexport const Channels = styled.nav`\r\n  font-size: 20px;\r\n  width: 260px;\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  background: #fff;\r\n  color: #111;\r\n  vertical-align: top;\r\n  & a {\r\n    padding-left: 36px;\r\n    color: inherit;\r\n    text-decoration: none;\r\n    height: 28px;\r\n    line-height: 28px;\r\n    display: flex;\r\n    align-items: center;\r\n    color: rgba(0, 0, 0, 0.5);\r\n  }\r\n  & .bold {\r\n    color: white;\r\n    font-weight: bold;\r\n  }\r\n\r\n  & h2 {\r\n    height: 36px;\r\n    line-height: 36px;\r\n    margin: 0;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    font-size: 20px;\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nexport const WorkspaceName = styled.button`\r\n  height: 64px;\r\n  line-height: 64px;\r\n  border: none;\r\n  width: 100%;\r\n  text-align: left;\r\n  border-top: 1px solid rgb(1, 1, 1, 0.2);\r\n  border-right: 1px solid rgb(1, 1, 1, 0.2);\r\n  border-bottom: 1px solid rgb(1, 1, 1, 0.2);\r\n  font-weight: 900;\r\n  font-size: 24px;\r\n  background: transparent;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  padding: 0;\r\n  padding-left: 16px;\r\n  margin: 0;\r\n  color: #111;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const MenuScroll = styled.div`\r\n  height: calc(100vh - 130px);\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const WorkspaceModal = styled.div`\r\n  padding: 10px 0 0;\r\n  & h2 {\r\n    padding-left: 20px;\r\n  }\r\n  & > button {\r\n    width: 100%;\r\n    height: 28px;\r\n    padding: 4px;\r\n    border: none;\r\n    background: transparent;\r\n    border-top: 1px solid rgb(28, 29, 28);\r\n    cursor: pointer;\r\n    &:last-of-type {\r\n      border-bottom: 1px solid rgb(28, 29, 28);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Chats = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nexport const AddButton = styled.button`\r\n  color: white;\r\n  font-size: 24px;\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 40px;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const WorkspaceButton = styled.button`\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 10px;\r\n  background: white;\r\n  border: 3px solid #3f0e40;\r\n  margin-bottom: 15px;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  color: black;\r\n  cursor: pointer;\r\n`;\r\n","import Modal from '@components/Modal';\r\nimport useInput from '@hooks/useInput';\r\nimport { Button, Input, Label } from '@pages/SignUp/styles';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport React, { useCallback, VFC } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n  setShowCreateChannelModal: (flag: boolean) => void;\r\n}\r\n\r\nconst CreateChannelModal: VFC<Props> = ({ show, onCloseModal, setShowCreateChannelModal }) => {\r\n  const [newChannel, onChangeNewChannel, setNewChannel] = useInput('');\r\n  const { workspace } = useParams<{ workspace: string }>();\r\n\r\n  const { data: userData } = useSWR<IUser | false>('/api/users', fetcher);\r\n  const { mutate: mutateChannel } = useSWR<IChannel[]>(\r\n    userData ? `/api/workspaces/${workspace}/channels` : null,\r\n    fetcher,\r\n  );\r\n\r\n  const onCreateChannel = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!newChannel || !newChannel.trim()) {\r\n        return;\r\n      }\r\n      axios\r\n        .post(`/api/workspaces/${workspace}/channels`, {\r\n          name: newChannel,\r\n        })\r\n        .then(() => {\r\n          setShowCreateChannelModal(false);\r\n          mutateChannel();\r\n          setNewChannel('');\r\n        })\r\n        .catch((err) => {\r\n          console.dir(err);\r\n          toast.error(err.response?.data, { position: 'bottom-center' });\r\n        });\r\n    },\r\n    [newChannel],\r\n  );\r\n\r\n  return (\r\n    <Modal show={show} onCloseModal={onCloseModal}>\r\n      <form onSubmit={onCreateChannel}>\r\n        <Label id=\"channel-label\">\r\n          <span>채널</span>\r\n          <Input id=\"channel\" value={newChannel} onChange={onChangeNewChannel} />\r\n        </Label>\r\n\r\n        <Button type=\"submit\">생성하기</Button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateChannelModal;\r\n","import Modal from '@components/Modal';\r\nimport useInput from '@hooks/useInput';\r\nimport { Button, Input, Label } from '@pages/SignUp/styles';\r\nimport { IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport React, { FC, useCallback } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n  setShowInviteWorkspaceModal: (flag: boolean) => void;\r\n}\r\nconst InviteWorkspaceModal: FC<Props> = ({ show, onCloseModal, setShowInviteWorkspaceModal }) => {\r\n  const { workspace } = useParams<{ workspace: string; channel: string }>();\r\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\r\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\r\n  const { mutate: revalidateMember } = useSWR<IUser[]>(\r\n    userData ? `/api/workspaces/${workspace}/members` : null,\r\n    fetcher,\r\n  );\r\n\r\n  const onInviteMember = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!newMember || !newMember.trim()) {\r\n        return;\r\n      }\r\n      axios\r\n        .post(`/api/workspaces/${workspace}/members`, {\r\n          email: newMember,\r\n        })\r\n        .then(() => {\r\n          revalidateMember();\r\n          setShowInviteWorkspaceModal(false);\r\n          setNewMember('');\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response?.data, { position: 'bottom-center' });\r\n        });\r\n    },\r\n    [newMember, workspace, revalidateMember, setShowInviteWorkspaceModal, setNewMember],\r\n  );\r\n\r\n  return (\r\n    <Modal show={show} onCloseModal={onCloseModal}>\r\n      <form onSubmit={onInviteMember}>\r\n        <Label id=\"member-label\">\r\n          <span>이메일</span>\r\n          <Input id=\"member\" type=\"email\" value={newMember} onChange={onChangeNewMember} />\r\n        </Label>\r\n        <Button type=\"submit\">초대하기</Button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default InviteWorkspaceModal;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const CollapseButton = styled.button<{ collapse: boolean }>`\r\n  background: transparent;\r\n  border: none;\r\n  width: 26px;\r\n  height: 26px;\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  margin-left: 10px;\r\n  cursor: pointer;\r\n  ${({ collapse }) =>\r\n    collapse &&\r\n    `\r\n    & i {\r\n      transform: none;\r\n    }\r\n  `};\r\n`;\r\n","import { IChannel, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport React, { useEffect, VFC } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  channel: IChannel;\r\n}\r\nconst EachChannel: VFC<Props> = ({ channel }) => {\r\n  const { workspace } = useParams<{ workspace?: string }>();\r\n  const location = useLocation();\r\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\r\n    dedupingInterval: 2000, // 2초\r\n  });\r\n  const date = localStorage.getItem(`${workspace}-${channel.name}`) || 0;\r\n  const { data: count, mutate } = useSWR<number>(\r\n    userData ? `/api/workspaces/${workspace}/channels/${channel.name}/unreads?after=${date}` : null,\r\n    fetcher,\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === `/workspace/${workspace}/channel/${channel.name}`) {\r\n      mutate(0);\r\n    }\r\n  }, [mutate, location.pathname, workspace, channel]);\r\n\r\n  return (\r\n    <NavLink key={channel.name} activeClassName=\"selected\" to={`/workspace/${workspace}/channel/${channel.name}`}>\r\n      <span className={count !== undefined && count > 0 ? 'bold' : undefined}># {channel.name}</span>\r\n      {count !== undefined && count > 0 && <span className=\"count\">{count}</span>}\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default EachChannel;\r\n","import { CollapseButton } from '@components/DMList/styles';\r\nimport EachChannel from '@components/EachChannel';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport React, { FC, useCallback, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  channelData?: IChannel[];\r\n  userData?: IUser;\r\n}\r\n\r\nconst ChannelList: FC<Props> = () => {\r\n  const { workspace } = useParams<{ workspace?: string }>();\r\n  const [channelCollapse, setChannelCollapse] = useState(false);\r\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\r\n    dedupingInterval: 2000, // 2초\r\n  });\r\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\r\n\r\n  const toggleChannelCollapse = useCallback(() => {\r\n    setChannelCollapse((prev) => !prev);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2>\r\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\r\n          <i\r\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\r\n            data-qa=\"channel-section-collapse\"\r\n            aria-hidden=\"true\"\r\n          />\r\n        </CollapseButton>\r\n        <span>채널</span>\r\n      </h2>\r\n      <div>\r\n        {!channelCollapse &&\r\n          channelData?.map((channel) => {\r\n            return <EachChannel key={channel.id} channel={channel} />;\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChannelList;\r\n","import { IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport React, { useEffect, VFC } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  member: IUser;\r\n  isOnline: boolean;\r\n}\r\nconst EachDM: VFC<Props> = ({ member, isOnline }) => {\r\n  const { workspace } = useParams<{ workspace?: string }>();\r\n  const location = useLocation();\r\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\r\n    dedupingInterval: 2000, // 2초\r\n  });\r\n  const date = localStorage.getItem(`${workspace}-${member.id}`) || 0;\r\n  const { data: count, mutate } = useSWR<number>(\r\n    userData ? `/api/workspaces/${workspace}/dms/${member.id}/unreads?after=${date}` : null,\r\n    fetcher,\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === `/workspace/${workspace}/dm/${member.id}`) {\r\n      mutate(0);\r\n    }\r\n  }, [mutate, location.pathname, workspace, member]);\r\n\r\n  return (\r\n    <NavLink key={member.id} activeClassName=\"selected\" to={`/workspace/${workspace}/dm/${member.id}`}>\r\n      <i\r\n        className={`c-icon p-channel_sidebar__presence_icon p-channel_sidebar__presence_icon--dim_enabled c-presence ${\r\n          isOnline ? 'c-presence--active c-icon--presence-online' : 'c-icon--presence-offline'\r\n        }`}\r\n        aria-hidden=\"true\"\r\n        data-qa=\"presence_indicator\"\r\n        data-qa-presence-self=\"false\"\r\n        data-qa-presence-active=\"false\"\r\n        data-qa-presence-dnd=\"false\"\r\n      />\r\n      <span>{member.nickname}</span>\r\n      {member.id === userData?.id && <span> (나)</span>}\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default EachDM;\r\n","import EachDM from '@components/EachDM';\r\n// import useSocket from '@hooks/useSocket';\r\nimport { CollapseButton } from '@components/DMList/styles';\r\nimport { IDM, IUser, IUserWithOnline } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport React, { FC, useCallback, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport useSWR from 'swr';\r\nimport useSocket from '@hooks/useSocket';\r\n\r\nconst DMList = () => {\r\n  const { workspace } = useParams<{ workspace?: string }>();\r\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\r\n    dedupingInterval: 2000, // 2초\r\n  });\r\n  const { data: memberData } = useSWR<IUserWithOnline[]>(\r\n    userData ? `/api/workspaces/${workspace}/members` : null,\r\n    fetcher,\r\n  );\r\n  const [socket] = useSocket(workspace);\r\n  const [channelCollapse, setChannelCollapse] = useState(false);\r\n  const [onlineList, setOnlineList] = useState<number[]>([]);\r\n\r\n  const toggleChannelCollapse = useCallback(() => {\r\n    setChannelCollapse((prev) => !prev);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('DMList: workspace 바꼈다', workspace);\r\n    setOnlineList([]);\r\n  }, [workspace]);\r\n\r\n  useEffect(() => {\r\n    socket?.on('onlineList', (data: number[]) => {\r\n      setOnlineList(data);\r\n    });\r\n    console.log('socket on dm', socket?.hasListeners('dm'), socket);\r\n    return () => {\r\n      console.log('socket off dm', socket?.hasListeners('dm'));\r\n      socket?.off('onlineList');\r\n    };\r\n  }, [socket]);\r\n\r\n  return (\r\n    <>\r\n      <h2>\r\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\r\n          <i\r\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\r\n            data-qa=\"channel-section-collapse\"\r\n            aria-hidden=\"true\"\r\n          />\r\n        </CollapseButton>\r\n        <span>Direct Messages</span>\r\n      </h2>\r\n      <div>\r\n        {!channelCollapse &&\r\n          memberData?.map((member) => {\r\n            const isOnline = onlineList.includes(member.id);\r\n            return <EachDM key={member.id} member={member} isOnline={isOnline} />;\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DMList;\r\n","import { CollapseButton } from '@components/DMList/styles';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport React, { FC, useCallback, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  channelData?: IChannel[];\r\n  userData?: IUser;\r\n}\r\n\r\nconst TrellolList: FC<Props> = () => {\r\n  const { workspace } = useParams<{ workspace?: string }>();\r\n  const [channelCollapse, setChannelCollapse] = useState(false);\r\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\r\n    dedupingInterval: 2000, // 2초\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h2>\r\n        <CollapseButton collapse={channelCollapse}>◼</CollapseButton>\r\n        <span>Trello</span>\r\n      </h2>\r\n      <div>\r\n        <Link to={`/workspace/${workspace}/trello`}># 일반</Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrellolList;\r\n","import { CollapseButton } from '@components/DMList/styles';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport React, { FC, useCallback, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  channelData?: IChannel[];\r\n  userData?: IUser;\r\n}\r\n\r\nconst CalendarList: FC<Props> = () => {\r\n  const { workspace } = useParams<{ workspace?: string }>();\r\n  const [channelCollapse, setChannelCollapse] = useState(false);\r\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\r\n    dedupingInterval: 2000, // 2초\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h2>\r\n        <CollapseButton collapse={channelCollapse}>◼</CollapseButton>\r\n        <span>Calendar</span>\r\n      </h2>\r\n      <div>\r\n        <Link to={`/workspace/${workspace}/calendar`}># 일반</Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CalendarList;\r\n","import fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport React, { VFC, useCallback, useState, useEffect } from 'react';\r\nimport { Redirect, Route, Switch, useParams } from 'react-router';\r\nimport useSWR from 'swr';\r\nimport {\r\n  AddButton,\r\n  Channels,\r\n  Chats,\r\n  Header,\r\n  LogOutButton,\r\n  MenuScroll,\r\n  ProfileImg,\r\n  ProfileModal,\r\n  RightMenu,\r\n  WorkspaceButton,\r\n  WorkspaceModal,\r\n  WorkspaceName,\r\n  Workspaces,\r\n  WorkspaceWrapper,\r\n} from './styles';\r\nimport gravatar from 'gravatar';\r\nimport loadable from '@loadable/component';\r\nimport Menu from '@components/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport Modal from '@components/Modal';\r\nimport { Button, Input, Label } from '@pages/SignUp/styles';\r\nimport useInput from '@hooks/useInput';\r\nimport { toast } from 'react-toastify';\r\nimport CreateChannelModal from '@components/createChannelModal';\r\nimport InviteWorkspaceModal from '@components/inviteWorkspaceModal';\r\nimport InviteChannelModal from '@components/inviteChannelModal';\r\nimport ChannelList from '@components/ChannelList';\r\nimport DMList from '@components/DMList';\r\nimport useSocket from '@hooks/useSocket';\r\nimport TrellolList from '@components/TrelloList';\r\nimport CalendarList from '@components/CalendarList';\r\n\r\nconst Channel = loadable(() => import('@pages/Channel'));\r\nconst DirectMessage = loadable(() => import('@pages/DirectMessage'));\r\nconst Trello = loadable(() => import('@pages/Trello'));\r\nconst Calendar = loadable(() => import('@pages/CalendarTodo'));\r\n\r\nconst Workspace: VFC = () => {\r\n  const [showUserMenu, setShowUserMenu] = useState(false);\r\n  const [showCreateWorkspaceModal, setShowCreateWorkspaceModal] = useState(false);\r\n  const [showInviteWorkspaceModal, setShowInviteWorkspaceModal] = useState(false);\r\n  const [showInviteChannelModal, setShowInviteChannelModal] = useState(false);\r\n  const [showWorkspaceModal, setShowWorkspaceModal] = useState(false);\r\n  const [showCreateChannelModal, setShowCreateChannelModal] = useState(false);\r\n  const [newWorkspace, onChangeNewWorkspace, setNewWorkspace] = useInput('');\r\n  const [newUrl, onChangenewUrl, setnewUrl] = useInput('');\r\n\r\n  const { workspace } = useParams<{ workspace: string }>();\r\n  const { data: userData, error, mutate } = useSWR<IUser | false>('/api/users', fetcher);\r\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\r\n\r\n  const [socket, disconnect] = useSocket(workspace);\r\n  useEffect(() => {\r\n    if (channelData && userData && socket) {\r\n      socket.emit('login', { id: userData.id, channels: channelData.map((v) => v.id) });\r\n    }\r\n  }, [socket, channelData, userData]);\r\n  useEffect(() => {\r\n    return () => {\r\n      disconnect();\r\n    };\r\n  }, [workspace]);\r\n\r\n  const onLogout = useCallback(() => {\r\n    axios\r\n      .post('/api/users/logout', null, {\r\n        withCredentials: true,\r\n      })\r\n      .then(() => {\r\n        mutate();\r\n      });\r\n  }, []);\r\n\r\n  const onClickCreateWorkspace = useCallback(() => {\r\n    setShowCreateWorkspaceModal(true);\r\n  }, []);\r\n\r\n  const onCreateWorkspace = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!newWorkspace || !newWorkspace.trim()) return;\r\n      if (!newUrl || !newUrl.trim()) return;\r\n      axios\r\n        .post('/api/workspaces', {\r\n          workspace: newWorkspace,\r\n          url: newUrl,\r\n        })\r\n        .then(() => {\r\n          mutate();\r\n          setShowCreateWorkspaceModal(false);\r\n          setNewWorkspace('');\r\n          setnewUrl('');\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          toast.error(err.response?.data, { position: 'bottom-center' });\r\n        });\r\n    },\r\n    [newWorkspace, newUrl],\r\n  );\r\n\r\n  const onCloseModal = useCallback(() => {\r\n    setShowCreateWorkspaceModal(false);\r\n    setShowCreateChannelModal(false);\r\n    setShowInviteChannelModal(false);\r\n    setShowInviteWorkspaceModal(false);\r\n  }, []);\r\n\r\n  const toggleWorkspaceModal = useCallback(() => {\r\n    setShowWorkspaceModal((prev) => !prev);\r\n  }, []);\r\n\r\n  const onClickAddChannel = useCallback(() => {\r\n    setShowCreateChannelModal(true);\r\n  }, []);\r\n\r\n  const onClickInviteworkspace = useCallback(() => {\r\n    setShowInviteWorkspaceModal(true);\r\n  }, []);\r\n\r\n  if (!userData) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header></Header>\r\n      <WorkspaceWrapper>\r\n        <Workspaces>\r\n          <Link to=\"/\" style={{ fontSize: '30px' }}>\r\n            <WorkspaceButton>🏠</WorkspaceButton>\r\n          </Link>\r\n          {userData.Workspaces.map((ws) => {\r\n            return (\r\n              <Link key={ws.id} to={`/workspace/${ws.url}/channel/일반`}>\r\n                <WorkspaceButton>{ws.name.slice(0, 1).toUpperCase()}</WorkspaceButton>\r\n              </Link>\r\n            );\r\n          })}\r\n          <AddButton onClick={onClickCreateWorkspace}>+</AddButton>\r\n        </Workspaces>\r\n        <Channels>\r\n          <WorkspaceName onClick={toggleWorkspaceModal}>\r\n            {userData?.Workspaces.find((v) => v.url === workspace)?.name}\r\n          </WorkspaceName>\r\n          <MenuScroll>\r\n            <Menu show={showWorkspaceModal} onCloseModal={toggleWorkspaceModal} style={{ top: 95, left: 80 }}>\r\n              <WorkspaceModal>\r\n                <h2>{userData?.Workspaces.find((v) => v.url === workspace)?.name}</h2>\r\n                <button onClick={onClickInviteworkspace}>워크스페이스에 사용자 초대</button>\r\n                <button onClick={onClickAddChannel}>채널 만들기</button>\r\n                <button onClick={onLogout}>로그아웃</button>\r\n              </WorkspaceModal>\r\n            </Menu>\r\n\r\n            <ChannelList />\r\n            <DMList />\r\n            <TrellolList />\r\n            <CalendarList />\r\n          </MenuScroll>\r\n        </Channels>\r\n        <Chats>\r\n          <Switch>\r\n            <Route path=\"/workspace/:workspace/channel/:channel\" component={Channel} />\r\n            <Route path=\"/workspace/:workspace/dm/:id\" component={DirectMessage} />\r\n            <Route path=\"/workspace/:workspace/trello\" component={Trello} />\r\n            <Route path=\"/workspace/:workspace/calendar\" component={Calendar} />\r\n          </Switch>\r\n        </Chats>\r\n      </WorkspaceWrapper>\r\n      <Modal show={showCreateWorkspaceModal} onCloseModal={onCloseModal}>\r\n        <form onSubmit={onCreateWorkspace}>\r\n          <Label id=\"workspace-label\">\r\n            <span>워크스페이스 이름</span>\r\n            <Input id=\"workspace\" value={newWorkspace} onChange={onChangeNewWorkspace} />\r\n          </Label>\r\n          <Label id=\"workspace-url-label\">\r\n            <span>워크스페이스 url</span>\r\n            <Input id=\"workspace\" value={newUrl} onChange={onChangenewUrl} />\r\n          </Label>\r\n          <Button type=\"submit\">생성하기</Button>\r\n        </form>\r\n      </Modal>\r\n      <CreateChannelModal\r\n        show={showCreateChannelModal}\r\n        onCloseModal={onCloseModal}\r\n        setShowCreateChannelModal={setShowCreateChannelModal}\r\n      />\r\n      <InviteWorkspaceModal\r\n        show={showInviteWorkspaceModal}\r\n        onCloseModal={onCloseModal}\r\n        setShowInviteWorkspaceModal={setShowInviteWorkspaceModal}\r\n      />\r\n      <InviteChannelModal\r\n        show={showInviteChannelModal}\r\n        onCloseModal={onCloseModal}\r\n        setShowInviteChannelModal={setShowInviteChannelModal}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Workspace;\r\n"],"names":["CreateModal","CloseModalButton","show","children","onCloseModal","stopPropagation","useCallback","e","onClick","setShowInviteChannelModal","useParams","workspace","channel","useInput","newMember","onChangeNewMember","setNewMember","userData","useSWR","fetcher","data","mutateMembers","mutate","onInviteMember","preventDefault","trim","axios","email","then","catch","error","console","dir","toast","response","position","onSubmit","id","value","onChange","type","sockets","disconnect","io","transports","info","undefined","Header","WorkspaceWrapper","Workspaces","Channels","WorkspaceName","MenuScroll","WorkspaceModal","Chats","AddButton","WorkspaceButton","setShowCreateChannelModal","newChannel","onChangeNewChannel","setNewChannel","mutateChannel","onCreateChannel","name","err","Modal","setShowInviteWorkspaceModal","revalidateMember","CollapseButton","collapse","location","useLocation","dedupingInterval","date","localStorage","getItem","count","useEffect","pathname","key","activeClassName","to","className","useState","channelCollapse","setChannelCollapse","channelData","toggleChannelCollapse","prev","map","member","isOnline","nickname","memberData","socket","useSocket","onlineList","setOnlineList","log","on","hasListeners","off","includes","Channel","loadable","DirectMessage","Trello","Calendar","showCreateWorkspaceModal","setShowCreateWorkspaceModal","showInviteWorkspaceModal","showInviteChannelModal","showWorkspaceModal","setShowWorkspaceModal","showCreateChannelModal","newWorkspace","onChangeNewWorkspace","setNewWorkspace","newUrl","onChangenewUrl","setnewUrl","emit","channels","v","onLogout","withCredentials","onClickCreateWorkspace","onCreateWorkspace","url","toggleWorkspaceModal","onClickAddChannel","onClickInviteworkspace","style","fontSize","ws","slice","toUpperCase","find","Menu","top","left","path","component"],"sourceRoot":""}