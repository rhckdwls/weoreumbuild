{"version":3,"file":"319.js","mappings":"qpCA6GA,UArGA,WACE,OAAgCA,EAAAA,EAAAA,IAAO,aAAcC,EAAAA,GAA7CC,EAAR,EAAQA,KACR,GADA,EAAcC,MAAd,EAAqBC,OACrB,GAA+BC,EAAAA,EAAAA,GAAS,IAAxC,IAAOC,EAAP,KAAcC,EAAd,KACA,KAAqCF,EAAAA,EAAAA,GAAS,IAA9C,GAAOG,EAAP,KAAiBC,EAAjB,KACA,KAAkCJ,EAAAA,EAAAA,GAAS,IAA3C,GAAOK,EAAP,KAAmBC,EAAnB,KACA,KAA4CN,EAAAA,EAAAA,GAAS,IAArD,GAAOO,EAAP,KAAwBC,EAAxB,KACA,KAA0CC,EAAAA,EAAAA,WAAS,GAAnD,GAAOC,EAAP,KAAsBC,EAAtB,KACA,KAAsCF,EAAAA,EAAAA,WAAS,GAA/C,GAAOG,EAAP,KAAoBC,EAApB,KACA,KAA0CJ,EAAAA,EAAAA,WAAS,GAAnD,GAAOK,EAAP,KAAsBC,EAAtB,KAEMC,GAAmBC,EAAAA,EAAAA,cACvB,SAACC,GACCZ,EAAYY,EAAEC,OAAOC,OACrBT,EAAiBJ,IAAkBW,EAAEC,OAAOC,SAE9C,CAACb,EAAeD,IAGZe,GAAwBJ,EAAAA,EAAAA,cAC5B,SAACC,GACCV,EAAiBU,EAAEC,OAAOC,OAC1BT,EAAiBN,IAAaa,EAAEC,OAAOC,SAEzC,CAACf,EAAUG,IAGPc,GAAWL,EAAAA,EAAAA,cACf,SAACC,GACCA,EAAEK,iBACGpB,GAAaA,EAASqB,SAGtBd,IACHG,GAAe,GACfE,GAAiB,GACjBU,IAAAA,KACQ,aAAc,CAAExB,MAAAA,EAAOE,SAAAA,EAAUE,SAAAA,IACtCqB,MAAK,WACJX,GAAiB,MAElBY,OAAM,SAAC7B,GAAU,QAChB8B,QAAQC,IAAR,UAAY/B,EAAMgC,gBAAlB,aAAY,EAAgBjC,MAC5BgB,EAAwC,sBAAzB,UAAAf,EAAMgC,gBAAN,eAAgBjC,cAIvC,CAACI,EAAOE,EAAUE,EAAUK,IAG9B,OAAIb,EACK,gBAAC,KAAD,CAAUkC,GAAG,MAIpB,uBAAKC,MAAO,CAAEC,OAAQ,UACpB,gBAAC,KAAD,aACA,gBAAC,KAAD,CAAMX,SAAUA,GACd,gBAAC,KAAD,CAAOY,GAAG,eACR,sCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,QAAQD,GAAG,QAAQE,KAAK,QAAQhB,MAAOnB,EAAOoC,SAAUnC,MAGxE,gBAAC,KAAD,CAAOgC,GAAG,kBACR,mCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,OAAOD,GAAG,WAAWE,KAAK,WAAWhB,MAAOjB,EAAUkC,SAAUjC,MAGhF,gBAAC,KAAD,CAAO8B,GAAG,kBACR,oCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,WAAWD,GAAG,WAAWE,KAAK,WAAWhB,MAAOf,EAAUgC,SAAUrB,MAGpF,gBAAC,KAAD,CAAOkB,GAAG,wBACR,uCACA,2BACE,gBAAC,KAAD,CACEC,KAAK,WACLD,GAAG,iBACHE,KAAK,iBACLhB,MAAOb,EACP8B,SAAUhB,KAGbX,GAAiB,gBAAC,KAAD,0BAChBP,GAAY,gBAAC,KAAD,qBACbS,GAAe,gBAAC,KAAD,uBACfE,GAAiB,gBAAC,KAAD,6BAEpB,gBAAC,KAAD,CAAQqB,KAAK,UAAb,SAEF,gBAAC,KAAD,mBAEE,gBAAC,KAAD,CAAMJ,GAAG,UAAT","sources":["webpack://weoreum-ts/./pages/SignUp/index.tsx"],"sourcesContent":["import useInput from '@hooks/useInput';\r\nimport React, { useCallback, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Button, Error, Form, Header, Input, Label, LinkContainer, Success } from './styles';\r\nimport useSWR from 'swr';\r\nimport fetcher from '@utils/fetcher';\r\n\r\nfunction SignUp() {\r\n  const { data, error, mutate } = useSWR('/api/users', fetcher);\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [nickname, onChangeNickname] = useInput('');\r\n  const [password, , setPassword] = useInput('');\r\n  const [passwordCheck, , setPasswordCheck] = useInput('');\r\n  const [mismatchError, setMismatchError] = useState(false);\r\n  const [signUpError, setSignUpError] = useState(false);\r\n  const [signUpSuccess, setSignUpSuccess] = useState(false);\r\n\r\n  const onChangePassword = useCallback(\r\n    (e) => {\r\n      setPassword(e.target.value);\r\n      setMismatchError(passwordCheck !== e.target.value);\r\n    },\r\n    [passwordCheck, setPassword],\r\n  );\r\n\r\n  const onChangePasswordCheck = useCallback(\r\n    (e) => {\r\n      setPasswordCheck(e.target.value);\r\n      setMismatchError(password !== e.target.value);\r\n    },\r\n    [password, setPasswordCheck],\r\n  );\r\n\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!nickname || !nickname.trim()) {\r\n        return;\r\n      }\r\n      if (!mismatchError) {\r\n        setSignUpError(false);\r\n        setSignUpSuccess(false);\r\n        axios\r\n          .post('/api/users', { email, nickname, password })\r\n          .then(() => {\r\n            setSignUpSuccess(true);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error.response?.data);\r\n            setSignUpError(error.response?.data === '이미 사용 중인 아이디입니다.');\r\n          });\r\n      }\r\n    },\r\n    [email, nickname, password, mismatchError],\r\n  );\r\n\r\n  if (data) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: '100vh' }}>\r\n      <Header>회원가입</Header>\r\n      <Form onSubmit={onSubmit}>\r\n        <Label id=\"email-label\">\r\n          <span>이메일 주소</span>\r\n          <div>\r\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\r\n          </div>\r\n        </Label>\r\n        <Label id=\"nickname-label\">\r\n          <span>닉네임</span>\r\n          <div>\r\n            <Input type=\"text\" id=\"nickname\" name=\"nickname\" value={nickname} onChange={onChangeNickname} />\r\n          </div>\r\n        </Label>\r\n        <Label id=\"password-label\">\r\n          <span>비밀번호</span>\r\n          <div>\r\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\r\n          </div>\r\n        </Label>\r\n        <Label id=\"password-check-label\">\r\n          <span>비밀번호 확인</span>\r\n          <div>\r\n            <Input\r\n              type=\"password\"\r\n              id=\"password-check\"\r\n              name=\"password-check\"\r\n              value={passwordCheck}\r\n              onChange={onChangePasswordCheck}\r\n            />\r\n          </div>\r\n          {mismatchError && <Error>비밀번호가 일치하지 않습니다.</Error>}\r\n          {!nickname && <Error>닉네임을 입력해주세요.</Error>}\r\n          {signUpError && <Error>이미 가입된 이메일입니다.</Error>}\r\n          {signUpSuccess && <Success>회원가입되었습니다! 로그인해주세요.</Success>}\r\n        </Label>\r\n        <Button type=\"submit\">회원가입</Button>\r\n      </Form>\r\n      <LinkContainer>\r\n        이미 회원이신가요?&nbsp;\r\n        <Link to=\"/login\">로그인 하러가기</Link>\r\n      </LinkContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n"],"names":["useSWR","fetcher","data","error","mutate","useInput","email","onChangeEmail","nickname","onChangeNickname","password","setPassword","passwordCheck","setPasswordCheck","useState","mismatchError","setMismatchError","signUpError","setSignUpError","signUpSuccess","setSignUpSuccess","onChangePassword","useCallback","e","target","value","onChangePasswordCheck","onSubmit","preventDefault","trim","axios","then","catch","console","log","response","to","style","height","id","type","name","onChange"],"sourceRoot":""}